//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("MvcBookStoreModel", "FK_Books_Categories", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BookStore.Models.Categories), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BookStore.Models.Books), true)]
[assembly: EdmRelationshipAttribute("MvcBookStoreModel", "FK_Carts_Books", "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BookStore.Models.Books), "Carts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BookStore.Models.Carts), true)]
[assembly: EdmRelationshipAttribute("MvcBookStoreModel", "FK_OrderDetails_Books", "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BookStore.Models.Books), "OrderDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BookStore.Models.OrderDetails), true)]
[assembly: EdmRelationshipAttribute("MvcBookStoreModel", "FK_OrderDetails_Orders", "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BookStore.Models.Orders), "OrderDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BookStore.Models.OrderDetails), true)]

#endregion

namespace BookStore.Models
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class MvcBookStoreEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“MvcBookStoreEntities”部分中的连接字符串初始化新 MvcBookStoreEntities 对象。
        /// </summary>
        public MvcBookStoreEntities() : base("name=MvcBookStoreEntities", "MvcBookStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MvcBookStoreEntities 对象。
        /// </summary>
        public MvcBookStoreEntities(string connectionString) : base(connectionString, "MvcBookStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 MvcBookStoreEntities 对象。
        /// </summary>
        public MvcBookStoreEntities(EntityConnection connection) : base(connection, "MvcBookStoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Books> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Books>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Books> _Books;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Carts> Carts
        {
            get
            {
                if ((_Carts == null))
                {
                    _Carts = base.CreateObjectSet<Carts>("Carts");
                }
                return _Carts;
            }
        }
        private ObjectSet<Carts> _Carts;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Categories> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Categories>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Categories> _Categories;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<OrderDetails> OrderDetails
        {
            get
            {
                if ((_OrderDetails == null))
                {
                    _OrderDetails = base.CreateObjectSet<OrderDetails>("OrderDetails");
                }
                return _OrderDetails;
            }
        }
        private ObjectSet<OrderDetails> _OrderDetails;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Orders> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Orders>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Orders> _Orders;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Books EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBooks(Books books)
        {
            base.AddObject("Books", books);
        }
    
        /// <summary>
        /// 用于向 Carts EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCarts(Carts carts)
        {
            base.AddObject("Carts", carts);
        }
    
        /// <summary>
        /// 用于向 Categories EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCategories(Categories categories)
        {
            base.AddObject("Categories", categories);
        }
    
        /// <summary>
        /// 用于向 OrderDetails EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrderDetails(OrderDetails orderDetails)
        {
            base.AddObject("OrderDetails", orderDetails);
        }
    
        /// <summary>
        /// 用于向 Orders EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrders(Orders orders)
        {
            base.AddObject("Orders", orders);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcBookStoreModel", Name="Books")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Books : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Books 对象。
        /// </summary>
        /// <param name="bookId">BookId 属性的初始值。</param>
        /// <param name="authorName">AuthorName 属性的初始值。</param>
        /// <param name="title">Title 属性的初始值。</param>
        /// <param name="price">Price 属性的初始值。</param>
        /// <param name="categoryId">CategoryId 属性的初始值。</param>
        public static Books CreateBooks(global::System.Int32 bookId, global::System.String authorName, global::System.String title, global::System.Decimal price, global::System.Int32 categoryId)
        {
            Books books = new Books();
            books.BookId = bookId;
            books.AuthorName = authorName;
            books.Title = title;
            books.Price = price;
            books.CategoryId = categoryId;
            return books;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                if (_BookId != value)
                {
                    OnBookIdChanging(value);
                    ReportPropertyChanging("BookId");
                    _BookId = StructuralObject.SetValidValue(value, "BookId");
                    ReportPropertyChanged("BookId");
                    OnBookIdChanged();
                }
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuthorName
        {
            get
            {
                return _AuthorName;
            }
            set
            {
                OnAuthorNameChanging(value);
                ReportPropertyChanging("AuthorName");
                _AuthorName = StructuralObject.SetValidValue(value, false, "AuthorName");
                ReportPropertyChanged("AuthorName");
                OnAuthorNameChanged();
            }
        }
        private global::System.String _AuthorName;
        partial void OnAuthorNameChanging(global::System.String value);
        partial void OnAuthorNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BookCoverUrl
        {
            get
            {
                return _BookCoverUrl;
            }
            set
            {
                OnBookCoverUrlChanging(value);
                ReportPropertyChanging("BookCoverUrl");
                _BookCoverUrl = StructuralObject.SetValidValue(value, true, "BookCoverUrl");
                ReportPropertyChanged("BookCoverUrl");
                OnBookCoverUrlChanged();
            }
        }
        private global::System.String _BookCoverUrl;
        partial void OnBookCoverUrlChanging(global::System.String value);
        partial void OnBookCoverUrlChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value, "CategoryId");
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcBookStoreModel", "FK_Books_Categories", "Categories")]
        public Categories Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("MvcBookStoreModel.FK_Books_Categories", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("MvcBookStoreModel.FK_Books_Categories", "Categories").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Categories> CategoriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categories>("MvcBookStoreModel.FK_Books_Categories", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Categories>("MvcBookStoreModel.FK_Books_Categories", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcBookStoreModel", "FK_Carts_Books", "Carts")]
        public EntityCollection<Carts> Carts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carts>("MvcBookStoreModel.FK_Carts_Books", "Carts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carts>("MvcBookStoreModel.FK_Carts_Books", "Carts", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcBookStoreModel", "FK_OrderDetails_Books", "OrderDetails")]
        public EntityCollection<OrderDetails> OrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderDetails>("MvcBookStoreModel.FK_OrderDetails_Books", "OrderDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderDetails>("MvcBookStoreModel.FK_OrderDetails_Books", "OrderDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcBookStoreModel", Name="Carts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carts : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Carts 对象。
        /// </summary>
        /// <param name="recordId">RecordId 属性的初始值。</param>
        /// <param name="cartId">CartId 属性的初始值。</param>
        /// <param name="bookId">BookId 属性的初始值。</param>
        /// <param name="count">Count 属性的初始值。</param>
        /// <param name="dateCreated">DateCreated 属性的初始值。</param>
        public static Carts CreateCarts(global::System.Int32 recordId, global::System.String cartId, global::System.Int32 bookId, global::System.Int32 count, global::System.DateTime dateCreated)
        {
            Carts carts = new Carts();
            carts.RecordId = recordId;
            carts.CartId = cartId;
            carts.BookId = bookId;
            carts.Count = count;
            carts.DateCreated = dateCreated;
            return carts;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecordId
        {
            get
            {
                return _RecordId;
            }
            set
            {
                if (_RecordId != value)
                {
                    OnRecordIdChanging(value);
                    ReportPropertyChanging("RecordId");
                    _RecordId = StructuralObject.SetValidValue(value, "RecordId");
                    ReportPropertyChanged("RecordId");
                    OnRecordIdChanged();
                }
            }
        }
        private global::System.Int32 _RecordId;
        partial void OnRecordIdChanging(global::System.Int32 value);
        partial void OnRecordIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CartId
        {
            get
            {
                return _CartId;
            }
            set
            {
                OnCartIdChanging(value);
                ReportPropertyChanging("CartId");
                _CartId = StructuralObject.SetValidValue(value, false, "CartId");
                ReportPropertyChanged("CartId");
                OnCartIdChanged();
            }
        }
        private global::System.String _CartId;
        partial void OnCartIdChanging(global::System.String value);
        partial void OnCartIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value, "BookId");
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value, "Count");
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value, "DateCreated");
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcBookStoreModel", "FK_Carts_Books", "Books")]
        public Books Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("MvcBookStoreModel.FK_Carts_Books", "Books").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("MvcBookStoreModel.FK_Carts_Books", "Books").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Books> BooksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("MvcBookStoreModel.FK_Carts_Books", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Books>("MvcBookStoreModel.FK_Carts_Books", "Books", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcBookStoreModel", Name="Categories")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categories : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Categories 对象。
        /// </summary>
        /// <param name="categoryId">CategoryId 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Categories CreateCategories(global::System.Int32 categoryId, global::System.String name)
        {
            Categories categories = new Categories();
            categories.CategoryId = categoryId;
            categories.Name = name;
            return categories;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value, "CategoryId");
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcBookStoreModel", "FK_Books_Categories", "Books")]
        public EntityCollection<Books> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Books>("MvcBookStoreModel.FK_Books_Categories", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Books>("MvcBookStoreModel.FK_Books_Categories", "Books", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcBookStoreModel", Name="OrderDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderDetails : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 OrderDetails 对象。
        /// </summary>
        /// <param name="orderDetailId">OrderDetailId 属性的初始值。</param>
        /// <param name="orderId">OrderId 属性的初始值。</param>
        /// <param name="bookId">BookId 属性的初始值。</param>
        /// <param name="quantity">Quantity 属性的初始值。</param>
        /// <param name="unitPrice">UnitPrice 属性的初始值。</param>
        public static OrderDetails CreateOrderDetails(global::System.Int32 orderDetailId, global::System.Int32 orderId, global::System.Int32 bookId, global::System.Int32 quantity, global::System.Decimal unitPrice)
        {
            OrderDetails orderDetails = new OrderDetails();
            orderDetails.OrderDetailId = orderDetailId;
            orderDetails.OrderId = orderId;
            orderDetails.BookId = bookId;
            orderDetails.Quantity = quantity;
            orderDetails.UnitPrice = unitPrice;
            return orderDetails;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderDetailId
        {
            get
            {
                return _OrderDetailId;
            }
            set
            {
                if (_OrderDetailId != value)
                {
                    OnOrderDetailIdChanging(value);
                    ReportPropertyChanging("OrderDetailId");
                    _OrderDetailId = StructuralObject.SetValidValue(value, "OrderDetailId");
                    ReportPropertyChanged("OrderDetailId");
                    OnOrderDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _OrderDetailId;
        partial void OnOrderDetailIdChanging(global::System.Int32 value);
        partial void OnOrderDetailIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                OnOrderIdChanging(value);
                ReportPropertyChanging("OrderId");
                _OrderId = StructuralObject.SetValidValue(value, "OrderId");
                ReportPropertyChanged("OrderId");
                OnOrderIdChanged();
            }
        }
        private global::System.Int32 _OrderId;
        partial void OnOrderIdChanging(global::System.Int32 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value, "BookId");
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value, "UnitPrice");
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcBookStoreModel", "FK_OrderDetails_Books", "Books")]
        public Books Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("MvcBookStoreModel.FK_OrderDetails_Books", "Books").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("MvcBookStoreModel.FK_OrderDetails_Books", "Books").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Books> BooksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("MvcBookStoreModel.FK_OrderDetails_Books", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Books>("MvcBookStoreModel.FK_OrderDetails_Books", "Books", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcBookStoreModel", "FK_OrderDetails_Orders", "Orders")]
        public Orders Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("MvcBookStoreModel.FK_OrderDetails_Orders", "Orders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("MvcBookStoreModel.FK_OrderDetails_Orders", "Orders").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Orders> OrdersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Orders>("MvcBookStoreModel.FK_OrderDetails_Orders", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Orders>("MvcBookStoreModel.FK_OrderDetails_Orders", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MvcBookStoreModel", Name="Orders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Orders : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Orders 对象。
        /// </summary>
        /// <param name="orderId">OrderId 属性的初始值。</param>
        /// <param name="address">Address 属性的初始值。</param>
        /// <param name="bookId">BookId 属性的初始值。</param>
        /// <param name="num">Num 属性的初始值。</param>
        public static Orders CreateOrders(global::System.Int32 orderId, global::System.String address, global::System.Int32 bookId, global::System.Int32 num)
        {
            Orders orders = new Orders();
            orders.OrderId = orderId;
            orders.Address = address;
            orders.BookId = bookId;
            orders.Num = num;
            return orders;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                if (_OrderId != value)
                {
                    OnOrderIdChanging(value);
                    ReportPropertyChanging("OrderId");
                    _OrderId = StructuralObject.SetValidValue(value, "OrderId");
                    ReportPropertyChanged("OrderId");
                    OnOrderIdChanged();
                }
            }
        }
        private global::System.Int32 _OrderId;
        partial void OnOrderIdChanging(global::System.Int32 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookId
        {
            get
            {
                return _BookId;
            }
            set
            {
                OnBookIdChanging(value);
                ReportPropertyChanging("BookId");
                _BookId = StructuralObject.SetValidValue(value, "BookId");
                ReportPropertyChanged("BookId");
                OnBookIdChanged();
            }
        }
        private global::System.Int32 _BookId;
        partial void OnBookIdChanging(global::System.Int32 value);
        partial void OnBookIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Num
        {
            get
            {
                return _Num;
            }
            set
            {
                OnNumChanging(value);
                ReportPropertyChanging("Num");
                _Num = StructuralObject.SetValidValue(value, "Num");
                ReportPropertyChanged("Num");
                OnNumChanged();
            }
        }
        private global::System.Int32 _Num;
        partial void OnNumChanging(global::System.Int32 value);
        partial void OnNumChanged();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MvcBookStoreModel", "FK_OrderDetails_Orders", "OrderDetails")]
        public EntityCollection<OrderDetails> OrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderDetails>("MvcBookStoreModel.FK_OrderDetails_Orders", "OrderDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderDetails>("MvcBookStoreModel.FK_OrderDetails_Orders", "OrderDetails", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
